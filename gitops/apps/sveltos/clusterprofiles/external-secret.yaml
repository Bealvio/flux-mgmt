apiVersion: lib.projectsveltos.io/v1beta1
kind: EventSource
metadata:
  name: external-secret-cluster-eventsource
spec:
  collectResources: true
  resourceSelectors:
    - group: 'apps'
      version: 'v1'
      kind: 'Deployment'
      labelFilters:
        - key: app.kubernetes.io/instance
          value: 'external-secrets-external-secrets'
          operation: Equal
---
apiVersion: lib.projectsveltos.io/v1beta1
kind: EventTrigger
metadata:
  name: external-secret-cluster-eventtrigger
spec:
  sourceClusterSelector:
    matchLabels:
      external-secret: 'true'
  destinationClusterSelector:
    matchLabels:
      type: mgmt
  eventSourceName: external-secret-cluster-eventsource
  syncMode: ContinuousWithDriftDetection
  reloader: true
  policyRefs:
    - kind: ConfigMap
      name: external-secret-vault
      namespace: projectsveltos
    - kind: ConfigMap
      name: external-secrets-vaultbackendconfig-cp
      namespace: projectsveltos
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: external-secret-vault
  annotations:
    projectsveltos.io/instantiate: 'true'
data:
  backend.yaml: |
    apiVersion: auth.vault.upbound.io/v1alpha1
    kind: Backend
    metadata:
      name: {{ .Cluster.metadata.name }}
    spec:
      forProvider:
        path: clusters/{{ .Cluster.metadata.name }}
        type: kubernetes
      providerConfigRef:
        name: default
  policy.yaml: |
    apiVersion: vault.vault.upbound.io/v1alpha1
    kind: Policy
    metadata:
      name: secrets-{{ .Cluster.metadata.name }}
    spec:
      forProvider:
        name: secrets-{{ .Cluster.metadata.name }}
        policy: |
          path "secrets-{{ .Cluster.metadata.name }}/data/*" {
            capabilities = ["read"]
           }
      providerConfigRef:
        name: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: external-secrets-vaultbackendconfig-cp
  annotations:
    projectsveltos.io/instantiate: 'true'
data:
  cp.yaml: |
    apiVersion: config.projectsveltos.io/v1beta1
    kind: ClusterProfile
    metadata:
      name: "vaultbackendconfig-{{ .Cluster.metadata.name }}"
    spec:
      reloader: true
      syncMode: ContinuousWithDriftDetection
      clusterRefs:
      - apiVersion: cluster.x-k8s.io/v1beta1
        kind: Cluster
        name: "{{ .Cluster.metadata.name }}"
        namespace: "{{ .Cluster.metadata.namespace }}"
      templateResourceRefs:
        - resource:
            apiVersion: v1
            kind: Secret
            name: '{{ .Cluster.metadata.name }}-ca'
            namespace: '{{ .Cluster.metadata.namespace }}'
          identifier: kubeCaSecrets
      policyRefs:
      - kind: ConfigMap
        name: external-secrets-vaultbackendconfig
        namespace: projectsveltos
        deploymentType: Local
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: external-secrets-vaultbackendconfig
  annotations:
    projectsveltos.io/instantiate: 'true'
    projectsveltos.io/template: 'true'
data:
  authbackendconfig.yaml: |
    apiVersion: kubernetes.vault.upbound.io/v1alpha1
    kind: AuthBackendConfig
    metadata:
      name: {{ .Cluster.metadata.name }}
    spec:
      forProvider:
        backendRef:
          name: {{ .Cluster.metadata.name }}
        kubernetesHost: https://{{ .Cluster.spec.controlPlaneEndpoint.host }}:{{ .Cluster.spec.controlPlaneEndpoint.port }}
        kubernetesCaCert: |
          {{ index (getResource "kubeCaSecrets").data "tls.crt" | b64dec | nindent 10 }}
        disableIssValidation: true
        disableLocalCaJwt: true
      providerConfigRef:
        name: default
  authbackendrole.yaml: |
    apiVersion: kubernetes.vault.upbound.io/v1alpha1
    kind: AuthBackendRole
    metadata:
      name: {{ .Cluster.metadata.name }}
    spec:
      forProvider:
        backendRef:
          name: {{ .Cluster.metadata.name }}
        roleName: external-secrets
        boundServiceAccountNames:
          - vault-auth
        boundServiceAccountNamespaces:
          - external-secrets
        tokenPolicies:
          - secrets-{{ .Cluster.metadata.name }}
      providerConfigRef:
        name: default
---
apiVersion: config.projectsveltos.io/v1beta1
kind: ClusterProfile
metadata:
  name: external-secret
spec:
  reloader: true
  syncMode: ContinuousWithDriftDetection
  clusterSelector:
    matchLabels:
      external-secret: 'true'
  kustomizationRefs:
    - kind: GitRepository
      name: infra
      namespace: flux-system
      path: ./gitops/apps/external-secret-operator/setup
  policyRefs:
    - name: external-secret-store-clusterprofile
      namespace: projectsveltos
      kind: ConfigMap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: external-secret-store-clusterprofile
  annotations:
    projectsveltos.io/template: 'true'
data:
  vault-store.yaml: |
    apiVersion: external-secrets.io/v1
    kind: ClusterSecretStore
    metadata:
      name: vault-backend
    spec:
      provider:
        vault:
          caProvider:
            name: bealv-mgmt-bundle
            namespace: cert-manager
            key: ca.crt
            type: Secret
          server: 'https://vault.bealv-mgmt.lan'
          path: 'secrets-{{ .Cluster.metadata.name }}'
          version: 'v2'
          auth:
            kubernetes:
              mountPath: 'clusters/{{ .Cluster.metadata.name }}'
              role: 'external-secrets'
              serviceAccountRef:
                name: 'vault-auth'
                namespace: 'external-secrets'
